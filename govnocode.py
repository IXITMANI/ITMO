import re, json, xmltodict
with open("Расписание.xml", 'r', encoding='UTF-8') as xml_file, open('new_govnocode.json', 'w', encoding='UTF-8') as new_fl, open('new_govnocode2.json', 'w', encoding='UTF-8') as json_file, open('new_govnocode3.json', 'w', encoding='UTF-8') as json_file3: print(f"Num1\nмой способ \tчерез регулярное выражение\n{'\n'.join([f'{text.count('8-{\\')}\t\t\t{len(re.findall(r'8-{\\', text))}\n{'-' * 38}' for text in ['oO4eQotYkU8-{\\vepbcce4qGMhf0E', 'fII1u8-{\\vKtVVBRSPfO8-{\\jnLUBRYcj', 'wvjFrVOqIdN8-{\\8-{\\vLVnVez3B8shZo', '8-{\\yqkC4oliOex1T01Xjl86nFZqO', 'cKnnFd4fROigYRZVkzPJA33cU']])}\n\nNum 2\nВариант {467618 % 6}\n{[student for student in "Петров П.П. P000\nАнищенко А.А. P33113\nПримеров Е.В. P000\nИванов И.И. P000".split('\n') if not re.compile(rf"^(\w+)\s(\w)\.\2\.\sP000$").match(student)]}", f"\n\nNum 3\nВариант {467618%36}" ,''*new_fl.write('{\n' + ''.join(list(map(lambda x, y: x.replace(',', '', -1) if x.rstrip().endswith(',') and y.lstrip().startswith('}') else x, [((open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1], (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][:open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].index("</")] + '",' + open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].rindex('>') + 1:]).replace('<', '"', 1).replace('>', '": "', 1)) if open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].count('<') == 2 else (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1].replace(',', ''), open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][:open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].index("</")] + " }, " + open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].rindex('>') + 1:].replace('<', '"', 1).replace('>', '": {', 1)) if "</" in open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i] else (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1], open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].replace('<', '"', 1).replace('>', '": {', 1)))[1].replace(' }, ', '},').replace(',}', '}') for i in range(len(open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1]))], [((open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1], (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][:open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].index("</")] + '",' + open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].rindex('>') + 1:]).replace('<', '"', 1).replace('>', '": "', 1)) if open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].count('<') == 2 else (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1].replace(',', ''), open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][:open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].index("</")] + " }, " + open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i][open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].rindex('>') + 1:].replace('<', '"', 1).replace('>', '": {', 1)) if "</" in open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i] else (open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i - 1], open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1][i].replace('<', '"', 1).replace('>', '": {', 1)))[1].replace(' }, ', '},').replace(',}', '}') for i in range(1, len(open("Расписание.xml", 'r', encoding='UTF-8').readlines()[2:-1]))]))) + '  }}'),'\n\nNum 3.1\n' + ''*json_file.write(json.dumps(xmltodict.parse(xml_file.read()), ensure_ascii=False, indent=4)), "\n\nNum 3.2\n"+''*(xml_file.seek(0), json_file3.write(json.dumps(json.loads(re.sub(r'\{(\s*\{[^}]*\})\s*\}', r'\1', re.sub(r',\s*\}', '}', re.sub(r'\{,', '{', '{' + re.sub(r',\s*}', '}', re.sub(r'</(\w+)>', r'},', re.sub(r'<(\w+)>', r'"\1":{', re.sub(r'<(\w+)>([^<]*)</\1>', r'"\1":"\2",', re.sub(r'<\?xml.*?\?>', '', xml_file.read())))) + '}'))))), ensure_ascii=False, indent=4)))[1])
